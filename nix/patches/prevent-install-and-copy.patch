diff --git a/auto_cpufreq/core.py b/auto_cpufreq/core.py
index 99397a9..16869ab 100755
--- a/auto_cpufreq/core.py
+++ b/auto_cpufreq/core.py
@@ -350,29 +350,12 @@ def get_current_gov():
 
 
 def cpufreqctl():
-    """
-    deploy cpufreqctl script
-    """
-
-    # detect if running on a SNAP
-    if os.getenv("PKG_MARKER") == "SNAP":
-        pass
-    else:
-        # deploy cpufreqctl.auto-cpufreq script
-        if not os.path.isfile("/usr/local/bin/cpufreqctl.auto-cpufreq"):
-            shutil.copy(SCRIPTS_DIR / "cpufreqctl.sh", "/usr/local/bin/cpufreqctl.auto-cpufreq")
-
+    # scripts are already in the correct place
+    pass
 
 def cpufreqctl_restore():
-    """
-    remove cpufreqctl.auto-cpufreq script
-    """
-    # detect if running on a SNAP
-    if os.getenv("PKG_MARKER") == "SNAP":
-        pass
-    else:
-        if os.path.isfile("/usr/local/bin/cpufreqctl.auto-cpufreq"):
-            os.remove("/usr/local/bin/cpufreqctl.auto-cpufreq")
+    #no need to restore
+    pass
 
 
 def footer(l=79):
@@ -400,30 +383,8 @@ def remove_complete_msg():
 
 
 def deploy_daemon():
-    print("\n" + "-" * 21 + " Deploying auto-cpufreq as a daemon " + "-" * 22 + "\n")
-
-    # deploy cpufreqctl script func call
-    cpufreqctl()
-
-    # turn off bluetooth on boot
-    bluetooth_disable()
-
-    auto_cpufreq_stats_path.touch(exist_ok=True)
-
-    print("\n* Deploy auto-cpufreq install script")
-    shutil.copy(SCRIPTS_DIR / "auto-cpufreq-install.sh", "/usr/local/bin/auto-cpufreq-install")
-
-    print("\n* Deploy auto-cpufreq remove script")
-    shutil.copy(SCRIPTS_DIR / "auto-cpufreq-remove.sh", "/usr/local/bin/auto-cpufreq-remove")
-
-    # output warning if gnome power profile is running
-    gnome_power_detect_install()
-    gnome_power_svc_disable()
-
-    # output warning if TLP service is detected
-    tlp_service_detect()
-
-    call("/usr/local/bin/auto-cpufreq-install", shell=True)
+    # prevent needless copying and system changes
+    pass
 
 
 def deploy_daemon_performance():
@@ -463,40 +424,7 @@ def deploy_daemon_performance():
 
 # remove auto-cpufreq daemon
 def remove_daemon():
-
-    # check if auto-cpufreq is installed
-    if not os.path.exists("/usr/local/bin/auto-cpufreq-remove"):
-        print("\nauto-cpufreq daemon is not installed.\n")
-        sys.exit(1)
-
-    print("\n" + "-" * 21 + " Removing auto-cpufreq daemon " + "-" * 22 + "\n")
-
-    # turn on bluetooth on boot
-    bluetooth_enable()
-
-    # output warning if gnome power profile is stopped
-    gnome_power_rm_reminder()
-    gnome_power_svc_enable()
-
-    # run auto-cpufreq daemon remove script
-    call("/usr/local/bin/auto-cpufreq-remove", shell=True)
-
-    # remove auto-cpufreq-remove
-    os.remove("/usr/local/bin/auto-cpufreq-remove")
-
-    # delete override pickle if it exists
-    if os.path.exists(governor_override_state):
-        os.remove(governor_override_state)
-
-    # delete stats file
-    if auto_cpufreq_stats_path.exists():
-        if auto_cpufreq_stats_file is not None:
-            auto_cpufreq_stats_file.close()
-
-        auto_cpufreq_stats_path.unlink()
-
-    # restore original cpufrectl script
-    cpufreqctl_restore()
+    pass
 
 
 def gov_check():
